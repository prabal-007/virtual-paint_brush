import cv2
import numpy as np

framewidth = 600
frameheight = 600
cam = cv2.VideoCapture(0)
cam.set(3,framewidth)
cam.set(4,frameheight)
cam.set(10,150)

myColors = [[31,46,42,213,182,255],[0,111,130,255,140,230],[32,179,135,255,122,255]]
myColorValues = [[51,153,255],[255,0,255],[0,255,0]]
myPoints = []       # [x,y,colorID]

def findColor(img, myColors, myColorValues):
    imgHSV = cv2.cvtColor(img,cv2.COLOR_BGR2HSV)
    count = 0
    newPoints = []
    for color in myColors:
        lower = np.array(color[0:3])
        upper = np.array(color[3:6])
        mask = cv2.inRange(imgHSV,lower,upper)
        # cv2.imshow(str(color[0]),mask)
        x,y = getContours(mask)
        cv2.circle(imageResult,(x,y),10,myColorValues[count],cv2.FILLED)
        if x!=0 and y!=0:
            newPoints.append([x,y,count])
        count += 1
    return newPoints

def getContours(img):
    contoures, hierarchy = cv2.findContours(img, cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_NONE)
    x,y,w,h = 0,0,0,0
    for cnt in contoures:
        area = cv2.contourArea(cnt)
        if area > 500:
            cv2.drawContours(imageResult, cnt, -1, (255,0,0),3)
            peri = cv2.arcLength(cnt, True)
            approx = cv2.approxPolyDP(cnt,0.02*peri,True)
            x,y,w,h = cv2.boundingRect(approx)
    return x+w//2,y

def drawOncanvas(myPoints, myColorValues):
    for point in myPoints:
        cv2.circle(imageResult,(point[0],point[1]),10,myColorValues[point[2]],cv2.FILLED)

while True:
    status, img = cam.read()
    imageResult = img.copy()
    newPoints = findColor(img, myColors, myColorValues)
    if len(newPoints)!=0:
        for newpoint in newPoints:
            myPoints.append(newpoint)
    if len(myPoints)!=0:
        drawOncanvas(myPoints,myColorValues)

    cv2.imshow('Result',imageResult)
    key = cv2.waitKey(1)
    if key == ord('q'):
        break
